{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "accordion-faq",
  "type": "registry:component",
  "title": "FAQ Accordion",
  "description": "A simple FAQ accordion component.",
  "dependencies": ["@radix-ui/react-accordion", "framer-motion"],
  "files": [
    {
      "path": "animata/accordion/faq.tsx",
      "content": "\"use client\";\n\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\nimport * as Accordion from \"@radix-ui/react-accordion\";\n\ninterface FAQItem {\n  id: number;\n  question: string;\n  answer: string;\n  icon?: string;\n  iconPosition?: string;\n}\n\ninterface FaqSectionProps {\n  data: FAQItem[];\n}\n\nexport default function FaqSection({ data }: FaqSectionProps) {\n  const [openItem, setOpenItem] = useState<string | null>(null);\n\n  return (\n    <div\n      className=\"mx-auto max-w-md rounded-lg bg-white p-4\"\n      style={{ maxWidth: \"700px\", minWidth: \"700px\" }}\n    >\n      <div className=\"mb-4 text-sm text-gray-500\">Every day, 9:01 AM</div>\n\n      <Accordion.Root\n        type=\"single\"\n        collapsible\n        value={openItem || \"\"}\n        onValueChange={(value) => setOpenItem(value)}\n      >\n        {data.map((item) => (\n          <Accordion.Item value={item.id.toString()} key={item.id} className=\"mb-2\">\n            <Accordion.Header>\n              <Accordion.Trigger\n                className=\"flex w-full items-center justify-start gap-x-4\"\n                style={{ width: \"100%\" }}\n              >\n                <div\n                  className=\"relative flex items-center space-x-2 rounded-xl bg-gray-100 p-2 hover:bg-[#E0F7FA]\"\n                  style={{\n                    backgroundColor: openItem === item.id.toString() ? \"#E0F7FA\" : \"\",\n                  }}\n                >\n                  {item.icon && (\n                    <span\n                      className={`absolute bottom-6 ${\n                        item.iconPosition === \"right\" ? \"right-0\" : \"left-0\"\n                      }`}\n                      style={{\n                        transform: item.iconPosition === \"right\" ? \"rotate(7deg)\" : \"rotate(-4deg)\",\n                      }}\n                    >\n                      {item.icon}\n                    </span>\n                  )}\n                  <span className=\"font-medium text-gray-700\">{item.question}</span>\n                </div>\n\n                <span className=\"cursor-pointer text-lg font-bold text-gray-400\">\n                  {openItem === item.id.toString() ? (\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"#7CB9E8\"\n                      className=\"size-6\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25Zm3 10.5a.75.75 0 0 0 0-1.5H9a.75.75 0 0 0 0 1.5h6Z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                  ) : (\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"currentColor\"\n                      className=\"size-6\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25ZM12.75 9a.75.75 0 0 0-1.5 0v2.25H9a.75.75 0 0 0 0 1.5h2.25V15a.75.75 0 0 0 1.5 0v-2.25H15a.75.75 0 0 0 0-1.5h-2.25V9Z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                  )}\n                </span>\n              </Accordion.Trigger>\n            </Accordion.Header>\n            <Accordion.Content asChild forceMount style={{ display: \"block\" }}>\n              <motion.div\n                initial=\"collapsed\"\n                animate={openItem === item.id.toString() ? \"open\" : \"collapsed\"}\n                variants={{\n                  open: { opacity: 1, height: \"auto\" },\n                  collapsed: { opacity: 0, height: 0 },\n                }}\n                transition={{ duration: 0.4 }}\n                style={{ width: \"100%\", overflow: \"hidden\" }}\n              >\n                <div\n                  className=\"ml-7 mt-1 rounded-lg p-3 text-white md:ml-16\"\n                  style={{\n                    borderRadius: \"12px\",\n                    textAlign: \"left\",\n                    width: \"100%\",\n                  }}\n                >\n                  <div className=\"relative max-w-xs rounded-2xl bg-blue-500 px-4 py-2 text-white\">\n                    {item.answer}\n                    <div className=\"absolute bottom-0 right-0 h-0 w-0 border-l-[10px] border-t-[10px] border-l-transparent border-t-blue-500\"></div>\n                  </div>\n                </div>\n              </motion.div>\n            </Accordion.Content>\n          </Accordion.Item>\n        ))}\n      </Accordion.Root>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/animata/faq.tsx"
    }
  ]
}
